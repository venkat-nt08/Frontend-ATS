name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          echo "📦 Installing dependencies..."
          npm ci --silent

      # Step 4: Create environment file
      - name: Create environment file
        run: |
          echo "🔐 Creating .env file..."
          echo "${{ secrets.FRONTEND_ENV }}" > .env
          echo "✅ Environment file created"

      # Step 5: Build frontend
      - name: Build Frontend
        run: |
          echo "🏗️ Building frontend..."
          npm run build --silent
          echo "✅ Build completed"
          ls -la dist/

      # Step 6: Prepare EC2 directory
      - name: Prepare EC2 target directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "📁 Preparing deployment directory..."
            sudo mkdir -p /var/www/Elden-ATS/Frontend-ATS/dist
            sudo chown -R ubuntu:ubuntu /var/www/Elden-ATS/Frontend-ATS
            sudo chmod -R 755 /var/www/Elden-ATS/Frontend-ATS
            
            # Backup existing deployment if it exists
            if [ -d "/var/www/Elden-ATS/Frontend-ATS/dist" ] && [ "$(ls -A /var/www/Elden-ATS/Frontend-ATS/dist)" ]; then
              echo "💾 Creating backup..."
              sudo cp -r /var/www/Elden-ATS/Frontend-ATS/dist /var/www/Elden-ATS/Frontend-ATS/dist.backup.$(date +%Y%m%d_%H%M%S)
            fi
            
            # Clear old files
            sudo rm -rf /var/www/Elden-ATS/Frontend-ATS/dist/*
            echo "✅ Directory prepared"

      # Step 7: Deploy build to EC2
      - name: Deploy build to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "dist/*"
          target: "/var/www/Elden-ATS/Frontend-ATS/"
          strip_components: 0
          overwrite: true

      # Step 8: Set permissions and reload Nginx
      - name: Finalize deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "🔧 Setting permissions..."
            sudo chown -R www-data:www-data /var/www/Elden-ATS/Frontend-ATS/dist
            sudo chmod -R 755 /var/www/Elden-ATS/Frontend-ATS/dist
            
            echo "🔍 Verifying deployment..."
            ls -la /var/www/Elden-ATS/Frontend-ATS/dist/
            
            echo "🔄 Testing Nginx configuration..."
            sudo nginx -t
            
            echo "♻️ Reloading Nginx..."
            sudo systemctl reload nginx
            
            echo "✅ Frontend deployment completed successfully!"
            echo "🌐 Your frontend is now live at http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)"
