name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      #  Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      #  Step 2: Setup Node, install dependencies & build frontend
      - name: Build Frontend
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: |
          echo "🛠️ Setting up Node and building project..."
          npm ci --silent
          echo "${{ secrets.FRONTEND_ENV }}" > .env
          echo "Environment file created"
          npm run build --silent

      #  Step 3: Prepare EC2 directory before deployment
      - name: Prepare EC2 target directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo mkdir -p /var/www/Elden-ATS/Frontend-ATS/dist
            sudo chown -R ubuntu:ubuntu /var/www/Elden-ATS/Frontend-ATS
            sudo chmod -R 755 /var/www/Elden-ATS/Frontend-ATS

      #  Step 4: Copy built files and restart Nginx
      - name: Deploy build to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "dist/"
          target: "/var/www/Elden-ATS/Frontend-ATS/"
          overwrite: true

      - name: Finalize permissions & reload Nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo chown -R www-data:www-data /var/www/Elden-ATS/Frontend-ATS/dist
            sudo chmod -R 755 /var/www/Elden-ATS/Frontend-ATS/dist
            sudo nginx -t && sudo systemctl reload nginx
            echo " Deployment completed successfully"
