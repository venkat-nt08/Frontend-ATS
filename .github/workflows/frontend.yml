name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Create .env file for build
        run: |
          echo "${{ secrets.FRONTEND_ENV }}" > .env
          echo "âœ… Environment file created"

      - name: Build project
        run: npm run build

      - name: Ensure target directory exists
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo mkdir -p /var/www/Elden-ATS/Frontend-ATS/dist
            sudo chown -R ubuntu:ubuntu /var/www/Elden-ATS/Frontend-ATS
            sudo chmod -R 755 /var/www/Elden-ATS/Frontend-ATS

      - name: Copy build to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "dist/"
          target: "/var/www/Elden-ATS/Frontend-ATS/"
          overwrite: true

      - name: Fix permissions and reload Nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo chown -R www-data:www-data /var/www/Elden-ATS/Frontend-ATS/dist
            sudo chmod -R 755 /var/www/Elden-ATS/Frontend-ATS/dist
            sudo nginx -t && sudo systemctl reload nginx
